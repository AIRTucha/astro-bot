"""Create a baseline migrations

Revision ID: 7d3954d93340
Revises: 
Create Date: 2024-08-19 19:03:45.355551

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7d3954d93340'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('jokes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('astrologic_joke', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_jokes_timestamp'), 'jokes', ['timestamp'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=60), nullable=False),
    sa.Column('date_of_birth_text', sa.String(length=60), nullable=True),
    sa.Column('language', sa.String(length=2), nullable=True),
    sa.Column('daily_forecast', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('advices',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('situation', sa.Text(), nullable=False),
    sa.Column('advice', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_advices_timestamp'), 'advices', ['timestamp'], unique=False)
    op.create_table('daily_forecasts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('forecast_text', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_daily_forecasts_timestamp'), 'daily_forecasts', ['timestamp'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('from_user', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_messages_timestamp'), 'messages', ['timestamp'], unique=False)
    op.create_table('warnings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('warning', sa.Enum('hacking_attempt', 'inappropriate_behavior', 'repetitive_unrelated_input', 'inappropriate_language', 'output_manipulation', name='warningtype'), nullable=False),
    sa.Column('warning_explanation', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_warnings_timestamp'), 'warnings', ['timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_warnings_timestamp'), table_name='warnings')
    op.drop_table('warnings')
    op.drop_index(op.f('ix_messages_timestamp'), table_name='messages')
    op.drop_table('messages')
    op.drop_index(op.f('ix_daily_forecasts_timestamp'), table_name='daily_forecasts')
    op.drop_table('daily_forecasts')
    op.drop_index(op.f('ix_advices_timestamp'), table_name='advices')
    op.drop_table('advices')
    op.drop_table('users')
    op.drop_index(op.f('ix_jokes_timestamp'), table_name='jokes')
    op.drop_table('jokes')
    # ### end Alembic commands ###
